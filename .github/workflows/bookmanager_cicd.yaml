name: book manager app ci cd
on:
  workflow_dispatch:
#  push:
#    branches:
#      - feature/eks-deploy
env:
  WORKSPACE: module3/book-manager-app
  CLUSTER_NAME: bookmanager-cluster
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "adopt"
          cache: "maven"
          server-id: cloudadvocate-book-manager-repository
          server-username: CODEARTIFACT_AUTH_USER
          server-password: CODEARTIFACT_AUTH_TOKEN

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Set CODEARTIFACT_AUTH_TOKEN env
        run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain cloudadvocate --domain-owner 363267848264 --region ap-south-1 --query authorizationToken --output text)" >> $GITHUB_ENV

      - name: Set CODEARTIFACT_AUTH_USER env
        run: echo "CODEARTIFACT_AUTH_USER=aws" >> $GITHUB_ENV

      - name: Build the code
        run: cd ${WORKSPACE} && mvn clean install package deploy

      - name: Junit Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Junit Test
          path: "module3/book-manager-app/target/surefire-reports/*.xml"
          reporter: java-junit

      - name: get deployed version
        run: echo "ARTIFACT_NAME=$(aws codeartifact list-package-version-assets --domain cloudadvocate --domain-owner 363267848264 --repository book-manager-repository --format maven --namespace com.cloudadvocate.java --package bookmanager --package-version 1.0.0-SNAPSHOT --query 'assets[0].name' | sed 's/\"//g')" >> $GITHUB_ENV

      - name: get artifact name
        run: echo $ARTIFACT_NAME

  build-docker:
    runs-on: ubuntu-latest
    needs: maven-build
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Set CODEARTIFACT_AUTH_TOKEN env
        run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain cloudadvocate --domain-owner 363267848264 --region ap-south-1 --query authorizationToken --output text)" >> $GITHUB_ENV

      - name: Set CODEARTIFACT_AUTH_USER env
        run: echo "CODEARTIFACT_AUTH_USER=aws" >> $GITHUB_ENV

      - name: get deployed version
        run: echo "ARTIFACT_NAME=$(aws codeartifact list-package-version-assets --domain cloudadvocate --domain-owner 363267848264 --repository book-manager-repository --format maven --namespace com.cloudadvocate.java --package bookmanager --package-version 1.0.0-SNAPSHOT --query 'assets[0].name' | sed 's/\"//g')" >> $GITHUB_ENV

      - name: get artifact name
        run: echo $ARTIFACT_NAME

      - name: download artifact from artifactory
        run: aws codeartifact get-package-version-asset --domain cloudadvocate --domain-owner 363267848264 --repository book-manager-repository --format maven --namespace com.cloudadvocate.java --package bookmanager --package-version 1.0.0-SNAPSHOT --asset ${ARTIFACT_NAME} bookmanager.jar

      - name: copy dockerfile
        run: cp module3/book-manager-app/Dockerfile .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up ECR access
        run: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 363267848264.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: 631043211533.dkr.ecr.us-east-1.amazonaws.com/book-manager,363267848264.dkr.ecr.ap-south-1.amazonaws.com/bookmanager:${{ github.sha }},363267848264.dkr.ecr.ap-south-1.amazonaws.com/bookmanager:latest

  deploy-eks:
    runs-on: ubuntu-latest
    needs: [maven-build, build-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Get Pod details
        id: updatedeployment
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          args: apply -f module9/bookmanager-deployment/deployment.yaml
          #args: set image deployment/calculator-deployment calculator=363267848264.dkr.ecr.ap-south-1.amazonaws.com/calculator:${{ github.sha }}
